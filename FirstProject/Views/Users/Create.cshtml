@using MVCWebProject.ViewModels
@model UsersCreatViewModel
<div id="page-header">
    <h1>Create</h1>
</div>
<div id="page-wrap">
    <div class="form-wrap">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="row">
                <div class="col-1-5 text-head">
                    @Html.LabelFor(model => model.FirstName)
                </div>
                <div class="col-2-5">
                    @Html.EditorFor(model => model.FirstName)
                </div>
                <div class="col-2-5">
                    @Html.ValidationMessageFor(model => model.FirstName, "")
                </div>
            </div>
            <div class="row">
                <div class="col-1-5">
                    @Html.LabelFor(model => model.LastName)
                </div>
                <div class="col-2-5">
                    @Html.EditorFor(model => model.LastName)
                </div>
                <div class="col-2-5">
                    @Html.ValidationMessageFor(model => model.LastName)
                </div>
            </div>
            <div class="row">
                <div class="col-1-5">
                    @Html.LabelFor(model => model.Phone)
                </div>
                <div class="col-2-5">
                    @Html.EditorFor(model => model.Phone)
                </div>
                <div class="col-2-5">
                    @Html.ValidationMessageFor(model => model.Phone, "")
                </div>
            </div>
            <div class="row">
                <div class="col-1-5">
                    @Html.LabelFor(model => model.Email)
                </div>
                <div class="col-2-5">
                    @Html.EditorFor(model => model.Email)
                </div>
                <div class="col-2-5">
                    @Html.ValidationMessageFor(model => model.Email, "")
                </div>
            </div>
            <div class="row">
                <div class="col-1-5">
                    @Html.LabelFor(model => model.Title)
                </div>
                <div class="col-2-5">
                    @Html.DropDownListFor(model => model.Title, Model.Titles as SelectList, "Select Title", new { id = "ddlTitles" })
                </div>
                <div class="col-2-5">
                    @Html.ValidationMessageFor(model => model.Title, "")
                </div>
            </div>
            <div class="row">
                <div class="col-1-5">
                    @Html.LabelFor(model => model.Country)
                </div>
                <div class="col-2-5">
                    @Html.DropDownListFor(model => model.Country, Model.Countries as SelectList, "Select Country", new { id = "ddlCountries" })
                </div>
                <div class="col-2-5">
                    @Html.ValidationMessageFor(model => model.Country, "")
                </div>
            </div>
            <div class="row">
                <div class="form-group" id="divCities"></div>
            </div>
            <div class="row">
                <div class="col-1-5">
                    @Html.LabelFor(model => model.Comments)
                </div>
                <div class="col-2-5">
                    @Html.TextAreaFor(model => model.Comments, new { @rows = 5 })
                </div>
                <div class="col-2-5">
                    @Html.ValidationMessageFor(model => model.Comments, "")
                </div>
            </div>
            <div class="row">
                <div class="col-3-5">
                    <div class="button right">
                        <input type="submit" value="Create" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<div id="page-footer">
</div>

@section scripts{
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script type="text/javascript">
    $(document).ready(function () {
        var removedTitles = false;
        var removedCountries = false;
        $("#ddlTitles").change(function () {
            if (!removedTitles) {
                $(this).children().first().remove();
                removedTitles = true;
            }
        });
        $("#ddlCountries").change(function () {
            var SelectCountry = $('#ddlCountries').val();
            if (!removedCountries) {
                $(this).children().first().remove();
                removedCountries = true;
            }
            $.ajax({
                url: '@Url.Action("Create", "Users")',
                datatype: "json",
                data: { "selectCountry": SelectCountry},
                type: "POST",
                contenttype: 'application/json; charset=utf-8',
                success: function (partionalView) {
                    $("#divCities").html(partionalView);
                    $('@Html.ValidationMessageFor(model => model.City, "")').insertAfter('#divValidation');
                    $('form').removeData("validator");
                    $("form").removeData("unobtrusiveValidation");
                    $.validator.unobtrusive.parse(document);
                },
                error: function (xhr) {
                    alert('error');
                }
            });
        });
    });
    </script>
}